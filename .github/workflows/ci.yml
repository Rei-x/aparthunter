name: CI

on:
  pull_request:
    branches: ['*']
  push:
    branches: ['main']

jobs:
  build-lint:
    name: Build and Lint
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: aparthunter
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      TZ: UTC
      PORT: 3333
      HOST: localhost
      LOG_LEVEL: info
      APP_KEY: really-hard-key-to-guess-so-please-dont-do-it
      NODE_ENV: development
      SESSION_DRIVER: cookie
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: aparthunter
      QUEUE_REDIS_HOST: 127.0.0.1
      QUEUE_REDIS_PORT: 6379
      QUEUE_REDIS_PASSWORD:

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint
        if: always()

      - name: Build
        run: pnpm build
        if: always()

      - name: Run tests
        run: pnpm test
        if: always()
